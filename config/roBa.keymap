#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        nobasibou {
            bindings = <&kp MINUS>;
            key-positions = <8 9>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mt_z: mt_z {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_Z";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "balanced";
        };

        lt_1: lt_1 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_1";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <300>;
            flavor = "balanced";
        };

        TapDance_q: TapDance_q {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_Q";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE)>, <&kp Q>;

            tapping-term-ms = <300>;
        };

        TapDance_p: TapDance_p {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_P";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp MINUS>;

            tapping-term-ms = <300>;
        };

        TapDance_a: TapDance_a {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_A";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp TAB>;

            tapping-term-ms = <300>;
        };

        TapDance_k: TapDance_k {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_K";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp UP_ARROW>;

            tapping-term-ms = <300>;
        };

        TapDance_m: TapDance_m {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_M";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp LEFT>;

            tapping-term-ms = <300>;
        };

        TapDance_comma: TapDance_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_COMMA";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp DOWN_ARROW>;

            tapping-term-ms = <300>;
        };

        TapDance_dot: TapDance_dot {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_DOT";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp RIGHT_ARROW>;

            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&TapDance_q         &kp W         &kp E         &kp R  &kp T                                      &kp Y   &kp U  &kp I      &kp O    &kp P
&kp A               &kp S         &kp D         &kp F  &kp G        &mkp MB1         &kp AT_SIGN  &kp H   &kp J  &kp K      &kp L    &kp BACKSPACE
&mt_z Z LEFT_SHIFT  &kp X         &kp C         &kp V  &kp B        &mkp MB2         &trans       &kp N   &kp M  &kp COMMA  &kp DOT  &kp ENTER
&kp LCTRL           &kp LEFT_WIN  &kp LEFT_ALT  &mo 1  &lt 2 SPACE  &lt 4 SPACE      &trans       &trans                             &mo 6
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        LAYER1 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp NUMBER_5                      &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &kp NUMBER_0
&trans        &kp CARET     &kp GRAVE     &kp NON_US_BACKSLASH  &kp PIPE      &trans      &trans  &kp AT_SIGN   &kp COLON     &kp TILDE     &kp UNDERSCORE  &kp SEMICOLON
&trans        &trans        &trans        &trans                &trans        &trans      &trans  &kp PLUS      &kp MINUS     &kp ASTERISK  &kp SLASH       &kp EQUAL
&trans        &trans        &trans        &trans                &trans        &trans      &trans  &trans                                                    &trans
            >;
        };

        LAYER2 {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp AMPERSAND  &kp SQT      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &kp TILDE      &kp AT_SIGN  &kp MINUS             &kp UNDERSCORE         &trans
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &kp CARET      &kp GRAVE    &kp NON_US_BACKSLASH  &kp PIPE               &trans
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &trans                                                                   &trans
            >;
        };

        LAYER3 {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                       &trans  &trans  &trans          &trans          &trans
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans      &trans  &trans  &trans  &trans          &kp UP_ARROW    &trans
&kp F11  &kp F12  &trans  &trans  &trans   &trans      &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
&trans   &trans   &trans  &trans  &trans   &trans      &trans  &trans                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&TapDance_q     &kp W         &kp E         &kp R  &kp T                             &kp Y   &kp U  &kp I      &kp O    &kp P
&kp A           &kp S         &kp D         &kp F  &kp G  &mkp MB1      &kp AT_SIGN  &kp H   &kp J  &kp K      &kp L    &kp BACKSPACE
&mt_z LSHIFT Z  &kp X         &kp C         &kp V  &kp B  &mkp MB2      &trans       &kp N   &kp M  &kp COMMA  &kp DOT  &kp ENTER
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &mo 1  &mo 5  &trans        &trans       &trans                             &mo 6
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&trans     &kp LC(LS(TAB))         &kp LC(TAB)              &kp LA(F4)        &trans                          &trans  &trans  &trans  &trans  &trans
&trans     &kp LG(LS(LEFT_ARROW))  &kp LG(LS(RIGHT_ARROW))  &mkp MB4          &mkp MB5  &mkp MB1      &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp LG(LEFT_ARROW)      &kp LG(RIGHT_ARROW)      &kp LG(UP_ARROW)  &mkp MB3  &mkp MB2      &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &trans                  &trans                   &trans            &trans    &trans        &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                                 &bt BT_NXT  &bt BT_PRV  &bt BT_CLR  &bt BT_CLR_ALL  &trans
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &sys_reset       &sys_reset   &trans      &trans      &trans      &trans          &trans
&trans         &trans         &trans         &trans         &trans         &bootloader      &bootloader  &trans      &trans      &trans      &trans          &bt BT_CLR
&trans         &trans         &trans         &trans         &trans         &trans           &trans       &trans                                              &to 0
            >;
        };
    };
};
